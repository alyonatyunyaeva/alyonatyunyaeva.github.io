{"version":3,"sources":["Components/GitSearch/GitSearch.js","Components/Repository/Repository.js","Components/RepList/RepList.tsx","Components/PageControls/PageControls.js","Components/RepSearch/RepSearch.js","Components/SearchBar/SearchBar.js","Components/Details/Details.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["gitHub","searchTop","fetch","then","response","json","jsonResponse","items","map","item","id","reposName","name","reposUrl","html_url","stars","stargazers_count","lastCommitDate","pushed_at","icon","owner","avatar_url","ownerName","login","ownerPage","language","reposDesc","description","contributors","contributors_url","slice","catch","console","log","searchReposByName","queryText","pageNum","totalCount","total_count","repositories","updated_at","searchCertainRepos","searchContributors","url","contributor","contributorName","contributorImg","contributorLink","contributions","Repository","className","src","this","props","repository","alt","Link","to","href","target","React","Component","RepList","state","isLoading","setState","key","PageControls","handleSearchPlus","bind","handleSearchMinus","match","params","pagenumber","totalPages","history","push","pathname","query","value","onClick","withRouter","RepSearch","loading","noResult","goBack","search","prevProps","Math","ceil","toUpperCase","SearchBar","handleQueryText","handleSearch","event","type","keyCode","onChange","onKeyDown","placeholder","Details","renderContriList","username","reponame","contributorUrl","App","Switch","Route","path","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b58cf8a2.chunk.js","sourcesContent":["\nconst gitHub = {\n    searchTop(){\n        return fetch(`https://api.github.com/search/repositories?sort=stars&q=stars:%3E=1`,\n        ).then(\n            response=>{\n                return response.json();\n            }\n        ).then(\n            jsonResponse => {\n                if (!jsonResponse.items) {\n                    return [];\n                }\n\n                return jsonResponse.items.map(\n                    item => {\n                        return  {\n                            id: item.id,\n                            reposName: item.name,\n                            reposUrl: item.html_url,\n                            stars: item.stargazers_count,\n                            lastCommitDate: item.pushed_at,\n                            icon: item.owner.avatar_url,\n                            ownerName: item.owner.login,\n                            ownerPage: item.owner.html_url,\n                            language: item.language,\n                            reposDesc: item.description,\n                            contributors: item.contributors_url,\n                        };\n                    }\n                ).slice(0, 10);            \n            }\n        ).catch(\n            () => {\n                console.log('--  Error  --')\n                return [];\n            }\n        );\n    },\n\n    searchReposByName(queryText, pageNum){\n        return fetch(`https://api.github.com/search/repositories?sort=stars&q=${queryText}+in:name&per_page=10&page=${pageNum}`, \n        ).then(\n            response=>{\n                return response.json();\n            }\n        ).then(\n            jsonResponse => {\n                if (!jsonResponse.items) {\n                    return {totalCount: 0, repositories: []};\n                }\n                return {\n                    totalCount: jsonResponse.total_count,\n                    repositories: jsonResponse.items.map(\n                        item => {\n                            return  {\n                                id: item.id,\n                                reposName: item.name,\n                                reposUrl: item.html_url,\n                                stars: item.stargazers_count,\n                                lastCommitDate: item.updated_at,\n                                icon: item.owner.avatar_url,\n                                ownerName: item.owner.login,\n                                ownerPage: item.owner.html_url,\n                                language: item.language,\n                                reposDesc: item.description,\n                                contributors: item.contributors_url,\n                            };\n                        }\n                    ) \n                }\n            }\n        ).catch(\n            () => {\n                console.log('--  Error  --')\n                return [];\n            }\n        );\n    },\n    \n    searchCertainRepos(owner, name){\n        return fetch(`https://api.github.com/search/repositories?q=repo:${owner}/${name}`, \n        ).then(\n            response=>{\n                return response.json();\n            }\n        ).then(\n            jsonResponse => {\n                if (!jsonResponse.items) {\n                    return [];\n                }\n                return {\n                        id: jsonResponse.items[0].id,\n                        reposName: jsonResponse.items[0].name,\n                        reposUrl: jsonResponse.items[0].html_url,\n                        stars: jsonResponse.items[0].stargazers_count,\n                        lastCommitDate: jsonResponse.items[0].updated_at,\n                        icon: jsonResponse.items[0].owner.avatar_url,\n                        ownerName: jsonResponse.items[0].owner.login,\n                        ownerPage: jsonResponse.items[0].owner.html_url,\n                        language: jsonResponse.items[0].language,\n                        reposDesc: jsonResponse.items[0].description,\n                        contributors: jsonResponse.items[0].contributors_url,\n                        };        \n            }\n        ).catch(\n            () => {\n                console.log('--  Error  --')\n                return [];\n            }\n        );\n    },\n\n    searchContributors(url){\n        return fetch(url).then(\n            response=>{\n                return response.json();\n            }\n        ).then(\n            jsonResponse => {\n                return jsonResponse.map(\n                    contributor => {\n                        return  {\n                            id: contributor.id,\n                            contributorName: contributor.login,\n                            contributorImg: contributor.avatar_url,\n                            contributorLink: contributor.html_url,\n                            contributions: contributor.contributions,\n                        }\n                    }\n                ).slice(0, 10);             \n            }    \n        ).catch(\n            () => {\n                console.log('--  Error  --')\n                return [];\n            }\n        );\n    },\n\n\n};\n\nexport default gitHub;","import React from 'react';\nimport './Repository.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\n\nclass Repository extends React.Component {\n    render(){\n        return(\n            <div className=\"repository\">\n\n                <div className=\"repository__line-1\">\n                    <div className=\"repository__image-container\">\n                        <img src={this.props.repository.icon} className=\"repository__image-container-img\" alt='Some picture'/>\n                    </div>\n                    <div>\n                       <Link to={`/details/${this.props.repository.ownerName}/${this.props.repository.reposName}`}\n                       className=\"repository__reposName\">  {this.props.repository.reposName} </Link>\n                    </div>\n                </div>\n\n                <div className=\"repository__line-2\">\n                    <div className=\"repository__stars-img\">\n                    </div>\n                    <p className=\"repository__stars\">\n                        {this.props.repository.stars}\n                    </p>\n                    <p className=\"repository__last-commit\">\n                        Last commit was <br/> {this.props.repository.lastCommitDate}\n                    </p>\n                    <a href={this.props.repository.reposUrl} className=\"repository__link\" target=\"blank\">\n                        Go to repository\n                    </a>\n                </div>\n\n            </div>\n        );\n    };\n};\n\nexport default Repository;\n\n","import React from 'react';\nimport './RepList.css';\nimport gitHub from '../GitSearch/GitSearch';\nimport Repository from '../Repository/Repository';\nimport '../loader-animation/loader-animation.css';\ntype Props = {\n}\n\ntype RepositoryType = {\n    id: string,\n    reposName: string,\n    reposUrl: string,\n    stars: string,\n    lastCommitDate: string,\n    icon: string,\n    ownerName: string,\n    ownerPage: string,\n    language: string,\n    reposDesc: string,\n    contributors: string,\n}\n\ntype State = {\n    repositories: Array<RepositoryType>,\n    isLoading: boolean,\n}\n\nclass RepList extends React.Component<Props, State> {\n\n    constructor(props: Props){\n        super(props);\n\n        this.state = {\n            repositories: [],\n            isLoading: false,\n        };\n    }\n    componentDidMount(){\n        this.setState({\n            isLoading: true,\n        })\n        gitHub.searchTop().then(\n            repositories => {\n                this.setState({\n                    repositories: repositories,\n                    isLoading: false,\n                })\n            }\n        )\n    }\n    render(){\n        return(\n            <div className='rep-list'>\n                GitHub Top 10\n                {this.state.isLoading && (\n                    <div>\n                        <div>Loading</div>\n                        <div className ='loader-container'>\n                            <div className='triangle'></div>\n                            <div className='triangle'></div>\n                            <div className='triangle'></div>\n                            <div className='triangle'></div>\n                            <div className='triangle'></div>\n                        </div>\n                    </div>\n                )}\n                {!this.state.isLoading && (\n                    this.state.repositories.map(\n                        repository => {\n                            return <Repository key={repository.id} repository={repository} />\n                        }\n                    )\n                ) \n                }\n                \n            </div>\n        );\n    };\n};\n\nexport default RepList;","import React from 'react';\nimport './PageControls.css';\nimport { withRouter } from 'react-router-dom';\n\nclass PageControls extends React.Component {\n    constructor(props){\n        super(props);\n         \n    this.handleSearchPlus = this.handleSearchPlus.bind(this);\n    this.handleSearchMinus = this.handleSearchMinus.bind(this);\n    }\n\n    handleSearchPlus(){\n        if (this.props.match.params.pagenumber < this.props.totalPages)\n        this.props.history.push({\n            pathname: `/search/${this.props.match.params.query}/${+this.props.match.params.pagenumber + 1}`,\n        });\n    }\n\n    handleSearchMinus(){\n        if (this.props.match.params.pagenumber > 1){\n            this.props.history.push({\n                pathname: `/search/${this.props.match.params.query}/${+this.props.match.params.pagenumber - 1}`,\n            });\n        }\n    }\n    \n\n    render() {\n        return (\n            <div>               \n                <button value='minus' className = \"pageControls\" onClick={this.handleSearchMinus}>&#8249;</button>\n                {this.props.match.params.pagenumber} из {this.props.totalPages}\n                <button value='plus' className = \"pageControls\" onClick={this.handleSearchPlus}>&#8250;</button>\n            </div>\n        )\n    }\n};\n\n export default withRouter(PageControls);","import React from 'react';\nimport Repository from '../Repository/Repository';\nimport gitHub from '../GitSearch/GitSearch'\nimport { withRouter } from 'react-router-dom';\nimport PageControls from '../PageControls/PageControls';\nimport '../loader-animation/loader-animation.css';\nimport './RepSearch.css';\n\nclass RepSearch extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            repositories: [],\n            loading: false,\n            totalPages: 0,\n            noResult: false,\n        };\n        this.goBack = this.goBack.bind(this);\n    }\n    componentDidMount(){\n        this.search();\n    }\n    componentDidUpdate(prevProps){\n        if (this.props.match.params.query !== prevProps.match.params.query \n            || this.props.match.params.pagenumber !== prevProps.match.params.pagenumber ){\n            this.search();\n        }\n        \n    }\n    search(){\n        let query = this.props.match.params.query,\n            pagenumber = this.props.match.params.pagenumber;\n        this.setState({\n            loading: true\n        });\n        gitHub.searchReposByName(query, pagenumber).then(\n            ({totalCount, repositories}) => {\n                const totalPages = Math.ceil(totalCount/10);\n\n                if (totalPages === 0){\n                    this.setState({\n                        noResult: true,\n                        loading: false,\n                    })\n                    return;\n                }\n\n                if (totalPages < 100) {\n                    this.setState({\n                        totalPages: totalPages,\n                        repositories: repositories,\n                        loading: false,\n                        noResult: false,\n                    })\n                } else {\n                    this.setState({\n                        totalPages: 100,\n                        repositories: repositories,\n                        loading: false,\n                        noResult: false,\n                    })\n                }\n            }\n        )\n    }\n\n    goBack(){\n        if (this.props.match.params.pagenumber !== \"1\"){\n            this.props.history.push({\n                pathname: `/search/${this.props.match.params.query}/1`,\n            });\n        }  else {\n            this.props.history.push({\n                pathname: \"/\",\n            });\n        }\n        \n    }\n\n    render(){\n        return(\n            <div className='rep-list-search'>\n                {this.state.loading && (\n                    <div>\n                    <div>Loading</div>\n                    <div className ='loader-container'>\n                        <div className='triangle'></div>\n                        <div className='triangle'></div>\n                        <div className='triangle'></div>\n                        <div className='triangle'></div>\n                        <div className='triangle'></div>\n                    </div>\n                    </div>\n                )}\n                {\n                    (!this.state.noResult && !this.state.loading) && \n                    (<div>\n                        <PageControls totalPages = {this.state.totalPages}/> \n                        \n                        <div  onClick={this.goBack}> \n                        {(this.props.match.params.pagenumber === \"1\") && (<div className=\"repoDetails__back\" >← back to TOP!</div>)}\n                        {(this.props.match.params.pagenumber !== \"1\") && (<div className=\"repoDetails__back\" >← to the begining</div>)}\n                        </div>\n                        <div>\n                            RESULTS FOR \"{this.props.match.params.query.toUpperCase()}\" QUERY\n                        </div>\n                        {this.state.repositories.map(\n                            repository => {\n                                return <Repository key={repository.id} repository={repository} />\n                            }\n                        )}\n                    </div>\n                    )\n                }\n                {\n                    (this.state.noResult && !this.state.loading) && (\n                        <div>\n                            <div onClick={this.goBack}>← back to TOP!</div>\n                            <br/>\n                            Sorry, no matches were found for your query. <br/>\n                            <img className='noResultImg' src='catcrying.gif'/>\n                        </div>\n                    )\n                }\n            </div>\n        );\n    };\n};\n\nexport default withRouter(RepSearch);","import React from 'react';\nimport './SearchBar.css';\nimport { withRouter } from 'react-router-dom';\n\nclass SearchBar extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            queryText: '',\n        };\n        this.handleQueryText=this.handleQueryText.bind(this);\n        this.handleSearch=this.handleSearch.bind(this);\n\n    }\n\n    handleQueryText(event){\n        this.setState({\n            queryText: event.target.value\n        })\n    }\n\n    handleSearch(event){\n        \n        if (!(event.type === 'keydown' && event.keyCode !== 13)){\n            if (this.state.queryText !== ''){\n                this.props.history.push({\n                    pathname: `/search/${this.state.queryText}/1`,\n                });\n            } else {\n                this.props.history.push({\n                    pathname: '/',\n                });\n            }\n            \n        }\n        \n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"searchBar-fields\">\n                    <input \n                        className=\"searchBar-fields__input\"\n                        onChange={this.handleQueryText} \n                        onKeyDown={this.handleSearch}\n                        placeholder=\"Your query... \" \n                    />\n                </div>\n                <div className=\"searchBar-submit\" >\n                    <a onClick={this.handleSearch}\n                        className=\"searchBar-submit__link\">\n                        SEARCH!\n                    </a>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default withRouter(SearchBar);","import React from 'react';\nimport './Details.css';\nimport gitHub from '../GitSearch/GitSearch'\nimport { withRouter } from 'react-router-dom';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nclass Details extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            repository: {},\n            contributors: [],\n            loading: false,\n        };\n\n        this.goBack = this.goBack.bind(this);\n        this.renderContriList = this.renderContriList.bind(this);\n    }\n    componentDidMount(){\n        this.setState({\n            loading: true\n        });\n        let username = this.props.match.params.username,\n            reponame = this.props.match.params.reponame;\n        console.log(username, reponame)\n        gitHub.searchCertainRepos(username, reponame).then(\n            repository => {\n                this.setState({\n                  repository: repository,\n                  loading: false,\n                })\n                return repository.contributors\n            }\n        ).then( \n            contributorUrl => {\n                return gitHub.searchContributors(contributorUrl)\n            }\n        ).then(\n            contributors => {\n                this.setState({\n                    contributors: contributors,\n                });\n            }\n        )\n    }\n    goBack(){\n        this.props.history.goBack();\n    }\n    renderContriList(){\n        return this.state.contributors.map(\n            contributor => {\n                return(\n                    <div className=\"contributors-top__list__contributor\" key={contributor.id}>\n                        <div>\n                            <img src={contributor.contributorImg} className=\"contributors-top__list__contributor-img\"/>\n                        </div>\n                        <div className=\"contributors-top__list__contributor-name\">\n                            <a className=\"contributors-top__list__contributor-name\" href={contributor.contributorLink} target='blank'>\n                                {contributor.contributorName}\n                            </a>\n                        </div>\n                        <div className=\"contributors-top__list__contributor-count\">\n                            {contributor.contributions}\n                        </div>\n                    </div>\n                )\n            }\n        )\n    }\n\n    render(){\n        console.log('det>>> ', this.props.match.params)\n        return (\n            <div className = 'repoDetails'>\n                <div className=\"repoDetails__pointer\">\n                    DETAILS\n                </div>\n                <div className=\"repoDetails__back\" onClick={this.goBack}> \n                    ← back\n                </div>\n\n                {this.state.loading && 'loading'}\n                {!this.state.loading &&\n                <div>\n                    <div className=\"repo-header\">\n                        <div className=\"repo-header__names\">\n                            <div className=\"repo-header__names-repository\">\n                                <div className=\"repo-header__names-repository-image-container\">\n                                    <img src={this.state.repository.icon} className=\"repo-header__names-repository-image-container-img\" alt='Owner Picture'/>\n                                </div>\n                                <div className=\"repo-header__names-repository-name\">\n                                    {this.state.repository.reposName} \n                                </div>\n                            </div>\n                            <div className = \"repo-header__names-owner\">\n                                by <br/>\n                                <a href={this.state.repository.ownerPage} className=\"repo-header__names-owner-link\" target=\"blank\">\n                                    {this.state.repository.ownerName}\n                                </a>\n                            </div>\n                        </div>\n                        <div className=\"repo-header__details\">\n                            <div className=\"repo-header__details-stars-img\">\n                            </div>\n                            <p className=\"repo-header__details-stars\">\n                                {this.state.repository.stars}\n                            </p>\n                            <p className=\"repo-header__details-last-commit\">\n                                Last commit was <br/> {this.state.repository.lastCommitDate}\n                            </p>                   \n                        </div>\n                    </div>\n\n                    <div className=\"main-info\">\n\n                        <div className = \"main-info__language\">\n                            LANGUAGE <br/>\n                            {this.state.repository.language}\n                        </div>\n                        <div className = \"main-info__desc\">\n                            DESCRIPTION <br/>\n                            {this.state.repository.reposDesc}\n                        </div>\n                    </div>\n\n                    <div className = \"contributors-top\">\n                        <div className=\"contributors-top__pointer\">\n                            CONTRIBUTORS TOP \n                        </div>      \n                        <div className=\"contributors-top__list\">               \n                            {this.renderContriList()}   \n                        </div>              \n                    </div>\n                </div>\n                }\n            </div>\n        )\n    }\n\n}\nexport default withRouter(Details);","import React from 'react';\nimport './App.css';\nimport RepList from '../RepList/RepList';\nimport RepSearch from '../RepSearch/RepSearch';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Details from '../Details/Details';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\n\nclass App extends React.Component {\n\n  render(){\n    return (\n      <Router>\n        <div className=\"App\">          \n          <div className=\"App-header\">\n          REPOSITORIES SEARCH <br/>\n          NEW GENERATION\n          </div>\n          <div className=\"App-main\">\n            <Switch>\n              <Route path=\"/details/:username/:reponame\">\n                <Details/>\n              </Route>\n              <Route path=\"/search/:query/:pagenumber?\">\n                <>\n                  <SearchBar/>\n                  <RepSearch/> \n                </>\n              </Route>\n\n              <Route path=\"/\">\n                <div>\n                  <SearchBar/>\n                  <br/>\n                  <RepList/>\n                </div>\n              </Route>\n\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}